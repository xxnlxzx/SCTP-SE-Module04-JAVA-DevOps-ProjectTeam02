version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  maven: circleci/maven@1.4.1
  snyk: snyk/snyk@1.4.0

executors:
  docker-executor:
    docker:
      - image: cimg/openjdk:17.0.7
        environment:
          NODE_VERSION: "14"  # Specify the Node.js version

jobs:
  ci_flow:
    executor: docker-executor
    steps:
      - checkout

      # Restore and cache Maven dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "pom.xml" }}
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}-{{ checksum "pom.xml" }}

      # Build the JAR file
      - run:
          name: Build JAR
          command: mvn package -DskipTests=true
          working_directory: /home/circleci/project  # Path to project

      # Run Maven tests
      - run:
          name: Run Maven Test
          command: mvn test

      # Install Docker for building and pushing the Docker image
      - setup_remote_docker

      # Build and Push the Docker image to a container registry (e.g., Docker Hub)
      - run:
          name: Build and Push Docker Image
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_LOGIN" --password-stdin
            docker build -t $DOCKER_LOGIN/module04-project02:$CIRCLE_SHA1 .
            docker push $DOCKER_LOGIN/module04-project02:$CIRCLE_SHA1

      # Run the Docker container
      - run:
          name: Run Docker Container
          command: |
            docker run -d -p 8000:8080 $DOCKER_LOGIN/module04-project02:$CIRCLE_SHA1

      # Run Spring Boot tests for functionality 1, 2, and 3
      - run:
          name: Test Functionality Tests
          command: |
            mvn test -Dgroups="functionality1,functionality2,functionality3"

  cicd_flow:
    executor: docker-executor
    steps:
      - checkout

      # Attach the persisted JAR file from the workspace
      - attach_workspace:
          at: /home/circleci/project/target  # Adjust this path based on your project structure

      # Your other steps for CI/CD flow, e.g., deploying to production, etc.

workflows:
  version: 2
  cicd_flow:
    jobs:
      - ci_flow
      - cicd_flow:
          requires:
            - ci_flow
          filters:
            branches:
              only: release
