version: 2.1
orbs:
  docker: circleci/docker@2.2.0
  maven: circleci/maven@1.4.1
  snyk: snyk/snyk@1.4.0
  
executors:
  docker-executor:
    docker:
      - image: circleci/openjdk:17-jdk-alpine

jobs:
  ci:
    executor: docker-executor
    steps:
      - checkout

      # Restore dependencies
      - restore_cache:
          keys:
            - v1-dependencies-{{ checksum "pom.xml" }}

      # Install dependencies
      - run:
          name: Install Dependencies
          command: mvn dependency:go-offline

      # Save dependencies for future runs
      - save_cache:
          paths:
            - ~/.m2
          key: v1-dependencies-{{ checksum "pom.xml" }}

      # Run Maven tests
      - run:
          name: Run Maven Test
          command: mvn test

      # Run Snyk security scan
      - run:
          name: Snyk Security Scan
          command: snyk test

  cd:
    executor: docker-executor
    steps:
      - checkout

      # Install Docker for building and pushing the Docker image
      - setup_remote_docker

      # Build the Docker image with semantic control tags
      - run:
          name: Build Docker Image
          command: |
            docker build -t module04-project:${CIRCLE_SHA1} -t module04-project:latest .

      # Push the Docker image to a container registry (e.g., Docker Hub)
      - run:
          name: Push Docker Image
          command: |
            echo "$DOCKER_PASSWORD" | docker login -u "$DOCKER_USERNAME" --password-stdin
            docker push module04-project:${CIRCLE_SHA1}
            docker push module04-project:latest

  test_functionality_1:
    executor: docker-executor
    steps:
      - checkout
      # Add steps for testing functionality 1

  test_functionality_2:
    executor: docker-executor
    steps:
      - checkout
      # Add steps for testing functionality 2

  test_functionality_3:
    executor: docker-executor
    steps:
      - checkout
      # Add steps for testing functionality 3

workflows:
  version: 2
  ci_cd:
    jobs:
      - ci
      - cd:
          requires:
            - ci
          filters:
            branches:
              only: release
